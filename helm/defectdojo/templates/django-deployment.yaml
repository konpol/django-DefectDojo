apiVersion: apps/v1
kind: Deployment
metadata:
  name: defectdojo-django
  labels:
    defectdojo.org/component: django
    app.kubernetes.io/name: defectdojo
    app.kubernetes.io/instance: defectdojo
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: defectdojo-1.6.200
spec:
  replicas: 1
  selector:
    matchLabels:
      defectdojo.org/component: django
      app.kubernetes.io/name: defectdojo
      app.kubernetes.io/instance: defectdojo
  template:
    metadata:
      labels:
        defectdojo.org/component: django
        app.kubernetes.io/name: defectdojo
        app.kubernetes.io/instance: defectdojo
    spec:
      serviceAccountName: defectdojo
      securityContext:
        fsGroup: 1000740000
      volumes:
      - name: run
        emptyDir: {}
      containers:
      - name: uwsgi
        image: 'quay-reg-s3-quay-quay-registry.apps.lab.ocp.ad.dom/defectdojo/defectdojo-django:1.6.200'
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000740000
          runAsGroup: 1000740000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: run
          mountPath: /run/defectdojo
        ports:
        - name: http
          protocol: TCP
          containerPort: 8081
        envFrom:
        - configMapRef:
            name: defectdojo
        - secretRef:
            name: defectdojo-extrasecrets
            optional: true
        env:
        - name: DD_CELERY_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo-redis-specific
              key: redis-password
        - name: DD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo-postgresql-specific
              key: password
        - name: DD_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: defectdojo-secret-key
        - name: DD_CREDENTIAL_AES_256_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: defectdojo-secret-key
        - name: DD_SESSION_COOKIE_SECURE
          value: "True"
        - name: DD_CSRF_COOKIE_SECURE
          value: "True"
        livenessProbe:
          httpGet:
            path: /login?force_login_form&next=/
            port: http
            httpHeaders:
            - name: Host
              value: localhost
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      - name: nginx
        image: 'quay-reg-s3-quay-quay-registry.apps.lab.ocp.ad.dom/defectdojo/defectdojo-nginx:1.6.200'
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000740000
          runAsGroup: 1000740000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: run
          mountPath: /run/defectdojo
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        envFrom:
        - configMapRef:
            name: defectdojo
        env:
        - name: METRICS_HTTP_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: defectdojo-secret-key
        - name: USE_TLS
          value: 'false'
        - name: GENERATE_TLS_CERTIFICATE
          value: 'false'
        livenessProbe:
          httpGet:
            path: /nginx_health
            port: http
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /uwsgi_health
            port: http
            httpHeaders:
            - name: Host
              value: localhost
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
